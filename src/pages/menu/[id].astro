---
import Layout from "@/layouts/Layout.astro"
import { Image } from "astro:assets"
import MenuOrder from "@/components/MenuOrder.vue"
import MenuItem from "@/components/MenuItem.astro"

import { db } from "@/database"
import { jsonArrayFrom, jsonObjectFrom } from "kysely/helpers/postgres"
import { sql } from "kysely"
import { auth } from "@/lib/auth"

const { id: menuId } = Astro.params

if (isNaN(Number(menuId))) {
	return Astro.rewrite("/404")
}

const session = await auth.api.getSession({
	headers: Astro.request.headers,
})

const menu = await db
	.selectFrom("menu")
	.select((eb) => [
		"menu.id",
		"menu.category_id",
		"menu.name",
		"menu.description",
		"menu.image",
		jsonArrayFrom(
			eb
				.selectFrom("menu_variants as mv")
				.leftJoin("menu_variant_options as mvo", "mvo.variant_id", "mv.id")
				.leftJoin("menu_option_values as mov", "mov.id", "mvo.option_value_id")
				.leftJoin("menu_options as mo", "mov.menu_option_id", "mo.id")
				.select((eb) => [
					"mv.id",
					"mv.name",
					"mv.price",
					eb.fn.coalesce("mov.name", sql<string>`''`).as("option_value"),
					eb.fn.coalesce("mo.name", sql<string>`''`).as("option_name"),
				])
				.whereRef("mv.menu_id", "=", "menu.id")
		).as("variants"),
	])
	.where("id", "=", Number(menuId))
	.executeTakeFirst()

if (!menu) {
	return Astro.rewrite("/404")
}

const relatedMenus = await db
	.selectFrom("menu")
	.select((eb) => [
		"menu.id",
		"menu.name",
		"menu.image",
		jsonObjectFrom(
			eb
				.selectFrom("menu_variants as mv")
				.select(["mv.name", "mv.price"])
				.whereRef("mv.menu_id", "=", "menu.id")
				.orderBy("mv.price asc")
				.limit(1)
		).as("variant"),
	])
	.where("category_id", "=", menu.category_id)
	.where("deleted_at", "is", null)
	.limit(9)
	.execute()
---

<Layout title={`${menu.name} - Velvet Cup`} bodyClass="content-start">
	<header class="main-section md:col-start-2 md:col-end-6">
		<figure>
			<Image
				src={menu.image ?? "/Image_not_available.png"}
				width={800}
				height={450}
				alt={menu.name}
				class="size-full object-cover aspect-video rounded-lg"
				alt=""
			/>
		</figure>
	</header>

	<section
		class="app-section main-section details md:col-start-6 md:col-end-[-2] grid grid-cols-subgrid gap-4"
	>
		<h1 class="text-4xl">{menu.name}</h1>
		<p>{menu.description}</p>

		<p>Choose a variant</p>

		<MenuOrder
			user_id={session?.user?.id}
			variants={menu.variants}
			menu_id={menu.id}
			client:load
		/>
	</section>

	<section class="bleed-section">
		<h2 class="text-2xl mb-4">Other items you might like</h2>

		<ul class="grid md:grid-cols-3 gap-4">
			{relatedMenus.map((item) => <MenuItem menu={item} />)}
		</ul>
	</section>
</Layout>

<style>
	.details > * {
		@apply col-span-full;
	}
</style>
